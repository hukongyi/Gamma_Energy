No path specified. Models will be saved in: "AutogluonModels/ag-20230328_091825/"
Presets specified: ['high_quality']
Stack configuration (auto_stack=True): num_stack_levels=1, num_bag_folds=8, num_bag_sets=20
Beginning AutoGluon training ... Time limit = 86400s
AutoGluon will save models to "AutogluonModels/ag-20230328_091825/"
AutoGluon Version:  0.7.0
Python Version:     3.9.16
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #1 SMP Debian 5.10.162-1 (2023-01-21)
Train Data Rows:    1096541
Train Data Columns: 11
Label Column: log_energy
Preprocessing data ...
AutoGluon infers your prediction problem is: 'regression' (because dtype of label-column == float and many unique label-values observed).
	Label info (max, min, mean, stddev): (4.998421793472894, -0.020295916280908, 1.80964, 0.56251)
	If 'regression' is not the correct problem_type, please manually specify the problem_type parameter during predictor init (You may specify problem_type as one of: ['binary', 'multiclass', 'regression'])
Using Feature Generators to preprocess the data ...
Fitting AutoMLPipelineFeatureGenerator...
	Available Memory:                    129929.68 MB
	Train Data (Original)  Memory Usage: 96.5 MB (0.1% of available memory)
	Inferring data type of each feature based on column values. Set feature_metadata_in to manually specify special dtypes of the features.
	Stage 1 Generators:
		Fitting AsTypeFeatureGenerator...
	Stage 2 Generators:
		Fitting FillNaFeatureGenerator...
	Stage 3 Generators:
		Fitting IdentityFeatureGenerator...
	Stage 4 Generators:
		Fitting DropUniqueFeatureGenerator...
	Types of features in original data (raw dtype, special dtypes):
		('float', []) : 11 | ['S50', 'sectheta', 'nch', 'sumpf', 'summd', ...]
	Types of features in processed data (raw dtype, special dtypes):
		('float', []) : 11 | ['S50', 'sectheta', 'nch', 'sumpf', 'summd', ...]
	2.1s = Fit runtime
	11 features in original data used to generate 11 features in processed data.
	Train Data (Processed) Memory Usage: 96.5 MB (0.1% of available memory)
Data preprocessing and feature engineering runtime = 2.34s ...
AutoGluon will gauge predictive performance using evaluation metric: 'root_mean_squared_error'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	To change this, specify the eval_metric parameter of Predictor()
AutoGluon will fit 2 stack levels (L1 to L2) ...
Fitting 11 L1 models ...
Fitting model: KNeighborsUnif_BAG_L1 ... Training model for up to 57584.04s of the 86397.66s of remaining time.
	-0.1648	 = Validation score   (-root_mean_squared_error)
	5.33s	 = Training   runtime
	296.15s	 = Validation runtime
Fitting model: KNeighborsDist_BAG_L1 ... Training model for up to 57280.06s of the 86093.68s of remaining time.
